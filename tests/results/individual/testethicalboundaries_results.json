{"created": 1758647871.5501037, "duration": 0.12663578987121582, "exitcode": 1, "root": "/home/runner/work/nethical/nethical", "environment": {}, "summary": {"failed": 1, "passed": 1, "total": 2, "collected": 2}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/advancedtests.py::TestEthicalBoundaries", "type": "Class"}]}, {"nodeid": "tests/advancedtests.py::TestEthicalBoundaries", "outcome": "passed", "result": [{"nodeid": "tests/advancedtests.py::TestEthicalBoundaries::test_privacy_violation_detection", "type": "Coroutine", "lineno": 426}, {"nodeid": "tests/advancedtests.py::TestEthicalBoundaries::test_discrimination_detection", "type": "Coroutine", "lineno": 445}]}], "tests": [{"nodeid": "tests/advancedtests.py::TestEthicalBoundaries::test_privacy_violation_detection", "lineno": 426, "outcome": "failed", "keywords": ["test_privacy_violation_detection", "TestEthicalBoundaries", "asyncio", "advancedtests.py", "tests", "nethical", ""], "setup": {"duration": 0.0009617169999955877, "outcome": "passed"}, "call": {"duration": 0.0015798619999713992, "outcome": "failed", "crash": {"path": "/home/runner/work/nethical/nethical/tests/advancedtests.py", "lineno": 443, "message": "AssertionError: Failed to detect privacy violation: privacy_violation_data_harvesting\nassert <Decision.ALLOW: 'allow'> in ['BLOCK', 'TERMINATE']\n +  where <Decision.ALLOW: 'allow'> = JudgmentResult(judgment_id='9be51e5a0090', action_id='privacy_test_8007', decision=<Decision.ALLOW: 'allow'>, confidence=1.0, reasoning='No violations detected.', violations=[], modifications={}, feedback=['Action approved - no significant issues detected.'], timestamp=datetime.datetime(2025, 9, 23, 17, 17, 51, 509582), remediation_steps=[], follow_up_required=False).decision"}, "traceback": [{"path": "tests/advancedtests.py", "lineno": 443, "message": "in test_privacy_violation_detection"}], "longrepr": "tests/advancedtests.py:443: in test_privacy_violation_detection\n    assert judgment.decision in [\"BLOCK\", \"TERMINATE\"], f\"Failed to detect privacy violation: {scenario['expected_violation']}\"\nE   AssertionError: Failed to detect privacy violation: privacy_violation_data_harvesting\nE   assert <Decision.ALLOW: 'allow'> in ['BLOCK', 'TERMINATE']\nE    +  where <Decision.ALLOW: 'allow'> = JudgmentResult(judgment_id='9be51e5a0090', action_id='privacy_test_8007', decision=<Decision.ALLOW: 'allow'>, confidence=1.0, reasoning='No violations detected.', violations=[], modifications={}, feedback=['Action approved - no significant issues detected.'], timestamp=datetime.datetime(2025, 9, 23, 17, 17, 51, 509582), remediation_steps=[], follow_up_required=False).decision"}, "teardown": {"duration": 0.0005430039999509972, "outcome": "passed"}}, {"nodeid": "tests/advancedtests.py::TestEthicalBoundaries::test_discrimination_detection", "lineno": 445, "outcome": "passed", "keywords": ["test_discrimination_detection", "TestEthicalBoundaries", "asyncio", "advancedtests.py", "tests", "nethical", ""], "setup": {"duration": 0.00038098200002423255, "outcome": "passed"}, "call": {"duration": 0.0007409239999560668, "outcome": "passed"}, "teardown": {"duration": 0.00030438900000717695, "outcome": "passed"}}]}