name: SBOM Generation and Signing

on:
  release:
    types: [created, published]
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write  # For keyless signing with Sigstore

jobs:
  generate-sbom:
    name: Generate SBOM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      
      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
      
      - name: Generate SBOM (SPDX)
        run: |
          syft packages dir:. -o spdx-json=sbom.spdx.json
          syft packages dir:. -o cyclonedx-json=sbom.cyclonedx.json
      
      - name: Upload SBOM
        uses: actions/upload-artifact@v5
        with:
          name: sbom
          path: |
            sbom.spdx.json
            sbom.cyclonedx.json

  sign-artifacts:
    name: Sign Artifacts with Cosign
    runs-on: ubuntu-latest
    needs: generate-sbom
    if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Build package
        run: |
          pip install build
          python -m build
      
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
      
      - name: Download SBOM
        uses: actions/download-artifact@v4
        with:
          name: sbom
      
      - name: Sign artifacts with keyless signing
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          # Sign wheel
          for file in dist/*.whl; do
            cosign sign-blob --yes "$file" --output-signature "${file}.sig" --output-certificate "${file}.pem" || echo "Keyless signing requires OIDC, skipping for PR"
          done
          
          # Sign SBOM
          cosign sign-blob --yes sbom.spdx.json --output-signature sbom.spdx.json.sig --output-certificate sbom.spdx.json.pem || echo "Keyless signing requires OIDC, skipping for PR"
        continue-on-error: true
      
      - name: Generate SHA256 checksums
        run: |
          cd dist
          sha256sum * > SHA256SUMS
          cd ..
          sha256sum sbom.*.json >> dist/SHA256SUMS
      
      - name: Upload signed artifacts
        uses: actions/upload-artifact@v5
        with:
          name: signed-artifacts
          path: |
            dist/
            *.sig
            *.pem

  provenance:
    name: Generate SLSA Provenance
    runs-on: ubuntu-latest
    needs: generate-sbom
    if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Build package
        run: |
          pip install build
          python -m build
      
      - name: Generate provenance (SLSA v1.0)
        run: |
          # Create a simple provenance statement
          cat > provenance.json << EOF
          {
            "_type": "https://in-toto.io/Statement/v1",
            "subject": [
              {
                "name": "$(ls dist/*.whl | head -1)",
                "digest": {
                  "sha256": "$(sha256sum dist/*.whl | head -1 | cut -d' ' -f1)"
                }
              }
            ],
            "predicateType": "https://slsa.dev/provenance/v1",
            "predicate": {
              "buildDefinition": {
                "buildType": "https://github.com/actions",
                "externalParameters": {
                  "repository": "${{ github.repository }}",
                  "ref": "${{ github.ref }}",
                  "sha": "${{ github.sha }}"
                },
                "internalParameters": {
                  "github_actor": "${{ github.actor }}",
                  "github_event_name": "${{ github.event_name }}"
                }
              },
              "runDetails": {
                "builder": {
                  "id": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                },
                "metadata": {
                  "invocationId": "${{ github.run_id }}",
                  "startedOn": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
                }
              }
            }
          }
          EOF
      
      - name: Upload provenance
        uses: actions/upload-artifact@v5
        with:
          name: provenance
          path: provenance.json
      
      - name: Attach to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./provenance.json
          asset_name: provenance.json
          asset_content_type: application/json
        continue-on-error: true
