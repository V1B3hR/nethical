name: CI - Lint, Test, Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install black flake8 mypy
      
      - name: Run Black
        run: black --check nethical/ tests/ examples/ || true
      
      - name: Run Flake8
        run: flake8 nethical/ tests/ examples/ --max-line-length=88 --extend-ignore=E203,W503 || true
      
      - name: Run Mypy
        run: mypy nethical/ --ignore-missing-imports || true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pytest pytest-cov pytest-asyncio
      
      - name: Run tests with coverage
        run: |
          pytest tests/ -v --cov=nethical --cov-report=xml --cov-report=html --cov-report=term
        continue-on-error: true
      
      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: |
            coverage.xml
            htmlcov/
        if: always()
      
      - name: Run adversarial tests
        run: |
          pytest tests/adversarial/ -v --tb=short
        continue-on-error: true

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install build tools
        run: |
          pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-package
          path: dist/
      
      - name: Upload wheel for security scan
        uses: actions/upload-artifact@v4
        with:
          name: wheel-file
          path: dist/*.whl
